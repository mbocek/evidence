<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:context="http://www.springframework.org/schema/context"
        xsi:schemaLocation="
                http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	<!-- ================================================================= -->
	<!-- Captcha setup                                                     -->
	<!-- ================================================================= -->
	<!-- 	<bean class="com.octo.captcha.service.image.DefaultManageableImageCaptchaService" id="captchaService"/> -->
	<bean id="captchaService" class="com.octo.captcha.service.multitype.GenericManageableCaptchaService">
		<constructor-arg index="0" ref="imageEngine"/>
		<constructor-arg type="int" index="1" value="180"/> <!-- minGuarantedStorageDelayInSeconds -->
		<constructor-arg type="int" index="2" value="180000"/> <!-- maxCaptchaStoreSize -->
		<constructor-arg type="int" index="3" value="75000"/> <!-- captchaStoreLoadBeforeGarbageCollection -->
	</bean>
	
	<bean id="imageEngine" class="com.octo.captcha.engine.GenericCaptchaEngine">
	    <constructor-arg index="0">
	        <list>
	            <ref bean="CaptchaFactory"/>
	        </list>
	    </constructor-arg>
	</bean>
    
    <bean id="CaptchaFactory" class="com.octo.captcha.image.gimpy.GimpyFactory" >
	    <constructor-arg><ref bean="wordgen"/></constructor-arg>
	    <constructor-arg><ref bean="wordtoimage"/></constructor-arg>
	</bean>
	
	<bean id="wordgen" class= "com.octo.captcha.component.word.wordgenerator.RandomWordGenerator" >
	    <constructor-arg><value>ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890</value></constructor-arg>
	</bean>
	<!-- <bean id="wordgen" class= "com.octo.captcha.component.word.wordgenerator.DictionaryWordGenerator" >
	    <constructor-arg><ref bean="filedict"/></constructor-arg>
	</bean>
	
	<bean id="filedict" class="com.octo.captcha.component.word.FileDictionary" >
	    <constructor-arg index="0"><value>toddlist</value></constructor-arg>
	</bean> -->
	
	<bean id="wordtoimage" class="com.octo.captcha.component.image.wordtoimage.ComposedWordToImage" >
	    <constructor-arg index="0"><ref bean="fontGenRandom"/></constructor-arg>
	    <constructor-arg index="1"><ref bean="backGenUni"/></constructor-arg>
	    <constructor-arg index="2"><ref bean="simpleWhitePaster"/></constructor-arg>
	</bean>
	
	<bean id="fontGenRandom" class="com.octo.captcha.component.image.fontgenerator.RandomFontGenerator" >
	    <constructor-arg index="0"><value>40</value></constructor-arg>
	    <constructor-arg index="1"><value>50</value></constructor-arg>
	    <constructor-arg index="2">
	        <list>
	            <ref bean="fontArial"/>
	        </list>
	    </constructor-arg>
	</bean>	
	
	<bean id="fontArial" class="java.awt.Font" >
	    <constructor-arg index="0"><value>Arial</value></constructor-arg>
	    <constructor-arg index="1"><value>0</value></constructor-arg>
	    <constructor-arg index="2"><value>10</value></constructor-arg>
	</bean>
	
	<bean id="backGenUni" class="com.octo.captcha.component.image.backgroundgenerator.UniColorBackgroundGenerator" >
	    <constructor-arg index="0"><value>300</value></constructor-arg>
	    <constructor-arg index="1"><value>100</value></constructor-arg>
	</bean>	
	
	<bean id="simpleWhitePaster" class="com.octo.captcha.component.image.textpaster.RandomTextPaster" >
	    <constructor-arg type="java.lang.Integer" index="0"><value>4</value></constructor-arg>
	    <constructor-arg type="java.lang.Integer" index="1"><value>4</value></constructor-arg>
	    <constructor-arg type="com.octo.captcha.component.image.color.ColorGenerator" index="2"><ref bean="colorGenRandomList"/></constructor-arg>
	</bean>
	
	<bean id="colorGenRandomList" class="com.octo.captcha.component.image.color.RandomListColorGenerator" >
        <constructor-arg index="0">
            <list>
                <ref bean="blue"/>
                <ref bean="green"/>
                <ref bean="red"/>
            </list>
        </constructor-arg>
    </bean>
    <bean id="blue" class="java.awt.Color" >
        <constructor-arg type="int" index="0"><value>0</value></constructor-arg>
        <constructor-arg type="int" index="1"><value>0</value></constructor-arg>
        <constructor-arg type="int" index="2"><value>255</value></constructor-arg>
    </bean>
    <bean id="green" class="java.awt.Color" >
        <constructor-arg type="int" index="0"><value>0</value></constructor-arg>
        <constructor-arg type="int" index="1"><value>255</value></constructor-arg>
        <constructor-arg type="int" index="2"><value>0</value></constructor-arg>
    </bean>
    <bean id="red" class="java.awt.Color" >
        <constructor-arg type="int" index="0"><value>255</value></constructor-arg>
        <constructor-arg type="int" index="1"><value>0</value></constructor-arg>
        <constructor-arg type="int" index="2"><value>0</value></constructor-arg>
	</bean>
</beans>